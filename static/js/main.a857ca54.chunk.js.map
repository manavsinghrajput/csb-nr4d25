{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojis","Object","keys","App","useState","meaning","setMeaning","className","placeholder","onChange","event","userInput","target","value","emojiMeaning","undefined","map","emoji","style","padding","fontSize","cursor","onClick","emojiClickHandler","rootElement","document","getElementById","createRoot","render"],"mappings":"uLAGMA,EAAkB,CACtB,eAAM,UACN,eAAM,YACN,eAAM,MACN,eAAM,cACN,eAAM,OACN,eAAM,YACN,eAAM,SAEJC,EAASC,OAAOC,KAAKH,GACV,SAASI,IACtB,MAA8BC,mBAAS,IAAG,mBAAnCC,EAAO,KAAEC,EAAU,KAmB1B,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,kBAEJ,uBACEC,YAAY,wBACZC,SAvBN,SAAyBC,GACvB,IAAIC,EAAYD,EAAME,OAAOC,MACzBC,EAAef,EAAgBY,QAEdI,IAAjBD,IACFA,EAAe,8CAEjBR,EAAWQ,EAEb,IAiBI,qBAAKP,UAAU,SAAQ,SAAEF,IAEzB,6BAAI,uBACHL,EAAOgB,KAAI,SAACC,GACX,OACE,sBACEC,MAAO,CACLC,QAAS,cACTC,SAAU,UACVC,OAAQ,WAEVC,QAAS,kBA1BnB,SAA2BL,GAEzBX,EADmBP,EAAgBkB,GAGrC,CAsByBM,CAAkBN,EAAM,EAAC,SAEvCA,GAGP,MAGN,CCxDA,IAAMO,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACzB,EAAG,M","file":"static/js/main.a857ca54.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useState } from \"react\";\n\nconst emojiDictionary = {\n  \"üòä\": \"Smiling\",\n  \"üò≥\": \"disbelief\",\n  \"üòî\": \"sad\",\n  \"ü•°\": \"takeout box\",\n  \"‚ù§Ô∏è\": \"love\",\n  \"üòë\": \"annoyance\",\n  \"üíÄ\": \"skull\"\n};\nvar emojis = Object.keys(emojiDictionary);\nexport default function App() {\n  const [meaning, setMeaning] = useState(\"\");\n\n  function onChangeHandler(event) {\n    var userInput = event.target.value;\n    var emojiMeaning = emojiDictionary[userInput]; //this method(object[key]) is used to fetch the value of a key from object when the key:value pair is not known beforehand\n\n    if (emojiMeaning === undefined) {\n      emojiMeaning = \"Oops! failed to fetch meaning ‚ö†Ô∏è\";\n    }\n    setMeaning(emojiMeaning);\n    // console.log(emojiMeaning);\n  }\n\n  function emojiClickHandler(emoji) {\n    var emojiMeaning = emojiDictionary[emoji];\n    setMeaning(emojiMeaning);\n    // console.log(\"clicked\",emoji)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>inside outtt!</h1>\n\n      <input\n        placeholder=\"enter your emoji here\"\n        onChange={onChangeHandler}\n      ></input>\n\n      <div className=\"output\">{meaning}</div>\n\n      <h2>emojis in database</h2>\n      {emojis.map((emoji) => {\n        return (\n          <span\n            style={{\n              padding: \"0rem 0.4rem\",\n              fontSize: \"1.65rem\",\n              cursor: \"pointer\"\n            }}\n            onClick={() => emojiClickHandler(emoji)}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}